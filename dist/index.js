"use strict";function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function styleInject(css,ref){void 0===ref&&(ref={});var insertAt=ref.insertAt;if(css&&"undefined"!=typeof document){var head=document.head||document.getElementsByTagName("head")[0],style=document.createElement("style");style.type="text/css","top"===insertAt&&head.firstChild?head.insertBefore(style,head.firstChild):head.appendChild(style),style.styleSheet?style.styleSheet.cssText=css:style.appendChild(document.createTextNode(css))}}var debugEl,listEl,debug,css="@charset \"UTF-8\";\n.debug-ui {\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  text-shadow: 1px 0 0 black,\r -1px 0 0 black,\r 0 1px 0 black,\r 0 -1px 0 black;\n  padding: 1em;\n  padding-left: 0;\n  resize: both;\n  overflow: auto;\n  font-size: 75%;\n  max-height: 100%;\n  box-sizing: border-box; }\n  .debug-ui ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    margin-left: 0.5em;\n    border-left: solid white 1px;\n    padding-left: 0.5em; }\n  .debug-ui .collapsible {\n    font-weight: bold;\n    cursor: ns-resize; }\n  .debug-ui .collapsible:not(.collapsed) {\n    flex-direction: column;\n    align-items: flex-start; }\n  .debug-ui .collapsible::after {\n    content: '⏶'; }\n  .debug-ui .collapsed::after {\n    content: '⏷'; }\n  .debug-ui .collapsed > ul {\n    display: none; }\n  .debug-ui label {\n    display: flex;\n    align-items: center; }\n  .debug-ui label:hover > span {\n    background: rgba(255, 255, 255, 0.2); }\n  .debug-ui label > span:first-child {\n    flex: none; }\n  .debug-ui label > input {\n    flex: auto;\n    margin-left: 0.5em; }\n  .debug-ui input[type=checkbox],\n  .debug-ui input[type=button] {\n    margin: 0;\n    cursor: pointer; }\n  .debug-ui input[disabled] {\n    cursor: not-allowed; }\n";function init(){(debugEl=document.createElement("aside")).className="debug-ui";var label=document.createElement("label");debugEl.appendChild(label);var text=document.createElement("span");text.textContent="debug-ui",label.appendChild(text);var panel=getPanel();label.classList.add("collapsible"),label.classList.add("collapsed"),label.onclick=function(event){panel.contains(event.target)||label.classList.toggle("collapsed")},label.appendChild(panel),listEl=panel,debug=[],document.body.appendChild(debugEl),function updateLoop(){debug.forEach(function(_ref){(0,_ref.update)()}),requestAnimationFrame(updateLoop)}()}styleInject(css);var inited=!1;function lazyInit(){inited||(init(),inited=!0)}function stopPropagation(event){event.stopPropagation()}function getPanel(){return document.createElement("ul")}function add(name,getter,setter){lazyInit();var el=document.createElement("li"),label=document.createElement("label");el.appendChild(label);var _update,text=document.createElement("span");text.textContent=name,label.appendChild(text);var prev,initial=getter(),type=_typeof(initial);if("object"===type&&null!==initial){var pList=listEl,panel=getPanel();return label.classList.add("collapsible"),label.classList.add("collapsed"),label.onclick=function(){label.classList.toggle("collapsed"),label.onclick=function(event){panel.contains(event.target)||label.classList.toggle("collapsed")},listEl=panel,label.appendChild(panel);var _loop=function(k){initial.hasOwnProperty&&initial.hasOwnProperty(k)&&add(k,function(){return initial[k]},function(v){return initial[k]=v})};for(var k in initial)_loop(k);listEl=pList},void listEl.appendChild(el)}var input=document.createElement("input");if("number"===type)input.type="number",input.onchange=function(_ref2){var value=_ref2.currentTarget.value;return setter(parseFloat(value))},input.onkeydown=input.onkeyup=stopPropagation,_update=function(current){return input.value=current},setter||(input.readOnly=input.disabled=!0);else if("boolean"===type)input.type="checkbox",input.onchange=function(_ref3){var checked=_ref3.currentTarget.checked;return setter(checked)},_update=function(current){return input.checked=current},setter||(input.readOnly=input.disabled=!0);else if("function"===type)text.remove(),input.type="button",input.value=name,input.onclick=function(){return getter()()},_update=function(current){};else if("string"===type)input.type="text",input.onchange=function(_ref4){var value=_ref4.currentTarget.value;return setter(value)},input.onkeydown=input.onkeyup=stopPropagation,_update=function(current){return input.value=current},setter||(input.readOnly=input.disabled=!0);else{if("object"!==type&&"undefined"!==type&&"symbol"!==type)throw new Error('Cannot debug "'.concat(name,'" due to unsupported type "').concat(type,'"'));input.type="text",input.onchange=function(_ref5){var value=_ref5.currentTarget.value;return setter(value)},input.onkeydown=input.onkeyup=stopPropagation,_update=function(current){},input.readOnly=input.disabled=!0}_update(initial),label.appendChild(input),debug.push({name:name,update:function(){var current=getter();prev!==current&&(_update(current),prev=current)}}),listEl.appendChild(el)}module.exports=add;
